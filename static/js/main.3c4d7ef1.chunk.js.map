{"version":3,"sources":["components/task.js","components/taskinput.js","components/50tasks.js","components/randomtodo.js","App.js","index.js"],"names":["Task","task","props","ActiveBtn","className","done","onClick","deleteTask","doneTask","title","Taskinput","addTask","input","state","setState","inputChange","event","target","value","handleEnter","key","this","type","maxLength","onKeyPress","onChange","React","Component","tasks50","Random","setVisibility","pict","document","querySelector","src","visibility","createRandomTask","sort","Math","random","console","log","id","App","tasks","push","length","index","map","indexOf","bind","activeTasks","filter","doneTasks","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3c4d7ef1.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Task = ({task, ...props }) => {\r\n\r\nconst ActiveBtn = () => \r\n      <div className=\"action-btn\">{!task.done?  \r\n      <p onClick = {props.doneTask}>✔️</p>:\r\n    <p onClick = {props.deleteTask}>❌</p>}\r\n      </div>;  \r\n    \r\nconst className = \"task\" + (task.done ? \"  task-done\" : \"\")\r\n\r\n\r\nreturn( \r\n    \r\n    \r\n    <div className={className}>\r\n        <p>{task.title}</p>\r\n        <ActiveBtn />\r\n    </div>\r\n   \r\n\r\n\r\n)\r\n}\r\nexport default Task;","import React from \"react\"\r\n\r\nclass Taskinput extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    this.state = {\r\n        input: \"\"\r\n        \r\n\r\n        }\r\n    }\r\n\r\n    addTask = () => {\r\n      const {input} = this.state\r\n    if (input){\r\n        this.props.addTask(input)\r\n        this.setState({input : \"\"})\r\n    }\r\n    }\r\n    \r\n    inputChange = (event) => {\r\n        this.setState( { input: event.target.value})\r\n    }\r\n    handleEnter = (event) => {\r\n        if (event.key === \"Enter\") this.addTask();\r\n        \r\n        \r\n    }\r\n\r\n    render(){\r\n        const {input} = this.state\r\n\r\n        return (\r\n            <div className=\"task-input\">\r\n                <input type=\"text\" maxLength=\"40\" onKeyPress={this.handleEnter} onChange={this.inputChange} value={input}></input>\r\n                <button onClick={this.addTask}>ADD</button>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n   \r\n}\r\nexport default Taskinput","const tasks50 = [\r\n    \"Go for a walk and sketch or rewrite everything you find along the road\",\r\n    \"Write a letter in future for yourself\",\r\n    \"Draw your dinner\",\r\n    \"Find a poem to which everything in your soul responds, rewrite it by hand and paste it into a notebook\",\r\n    \"Glue an envelope to the notebook and put everything that you find on the street in today\",\r\n    \"Find a photo of a stranger and write him a short biography\",\r\n    \"Draw only red objects throughout the day\",\r\n    \"Draw a map of the places where you have been that day\",\r\n    \"Draw a map of the lines of your palm\",\r\n    \"Circle your footprints with chalk\",\r\n    \"Record a conversation overheard\",\r\n    \"Trace how the moon moves in relation to your home\",\r\n    \"Go to a paint store and collect samples of your favorite colors\",\r\n    \"Snatch 15 minutes and eat an orange\",\r\n    \"Write a hokku\",\r\n    \"Hang upside down for five minutes\",\r\n    \"Equip a room on the street from everything you find in nature\",\r\n    \"Read a book in one day\",\r\n    \"Illustrate the list of products you want to buy\",\r\n    \"Write a letter to someone you respect\",\r\n    \"Prepare breakfast / lunch / dinner in one color theme\",\r\n    \"Fill a whole page of the notebook with small circles, and then color them\",\r\n    \"Give something that you love\",\r\n    \"Select an object and draw the side of it that is not visible to you\",\r\n    \"List all the places in which you happened to live\",\r\n    \"Describe in detail your favorite room\",\r\n    \"Make a mini-booklet about shopping list\",\r\n    \"Remember your favorite children's game and play\",\r\n    \"Write in your journal with pen, ink, charcoal, wax crayons, markers, etc\",\r\n    \"Draw some of your favorite clothes\",\r\n    \"Make a useful item using only paper and tape\",\r\n    \"Explore in detail a holiday or ritual from another culture\",\r\n    \"Arrange a temporary art installation. Use only sticky notes and a pen\",\r\n    \"Draw a map of the places in the city where you like to sit (you can scan it and give it to a friend\",\r\n    \"Record all the sounds that you hear during the hour\",\r\n    \"For one day, give up all media. Write down what came of it\",\r\n    \"Make a pencil mark on six different surfaces\",\r\n    \"Draw trash\",\r\n    \"Make your morning collage. (This refers to a collage that is whipped up in the morning to spur creative thinking)\",\r\n    \"List ten things that matter most to you (people and animals don't count)\",\r\n    \"List ten things you would like to do every day\",\r\n    \"Paste your child's photo into the notebook\",\r\n    \"Make something out of trash\",\r\n    \"Make a note in the notebook in CAPITAL LETTERS\",\r\n    \"Gather some flat natural materials (flowers, leaves) and glue in a notebook\",\r\n    \"Modify the magazine page - cut a hole, spill tea, singe, crumple, etc\",\r\n    \"Think of a few color combinations that you react to. Write down, sketch, point out where you see them\",\r\n    \"Describe something secret in the notebook. Cut the paper with the note into several pieces and glue them on the page mixed together\",\r\n    \"Write down definitions or descriptions of words or objects that interest you. Use encyclopedias and dictionaries\",\r\n    \"Draw the outline of the subject without looking at the paper\"\r\n\r\n]\r\n\r\nexport default tasks50;","import React from \"react\";\r\nimport tasks50 from \"./50tasks.js\";\r\n//import defaultExport from \"./50tasks\";\r\n\r\nclass Random extends React.Component{ \r\n    constructor (props) {\r\n        super (props)\r\n\r\n        this.state = {\r\n            task : tasks50[0],\r\n            visibility : false,\r\n            pict : 1\r\n        }\r\n    }\r\n    \r\n    setVisibility = () => {\r\n        if (this.state.pict == 1) {\r\n        document.querySelector(\".bones\").src = \"bones1.jpg\";\r\n        this.setState({pict : 0})}\r\n        else {\r\n            document.querySelector(\".bones\").src = \"bones.jpg\";\r\n            this.setState({pict : 1})\r\n             }\r\n        if (this.state.visibility === true) {\r\n            this.setState({visibility : false})\r\n            \r\n        } else {\r\n            this.setState({visibility : true})\r\n        } }\r\n        \r\n    createRandomTask = () => {\r\n        tasks50.sort(() => Math.random() - 0.5)\r\n        console.log(tasks50[0])\r\n        this.setState({ task : tasks50[0]})\r\n    \r\n    }    \r\n    \r\n    addTask = () => {\r\n     let {task} = this.state;\r\n        this.props.addTask(task)\r\n    }\r\n\r\n    render () {\r\n \r\n        \r\n        return (\r\n            <div>\r\n            <div className = \"randombar\">\r\n                <h2> Go to lazy TODO</h2>\r\n               <button onClick = {this.setVisibility} className = \"btn-random\"><img className = \"bones\" src = \"bones1.jpg\"></img></button>\r\n            </div>\r\n            { this.state.visibility &&<div className = \"taskGenerator\">\r\n                <p><em>if you are boared and have nothing to do - create random task and have fan</em></p>\r\n                <h2 id = \"putTask\">{this.state.task}</h2>\r\n                <div className = \"btn-create\">\r\n                <button onClick = {this.createRandomTask} className = \"btn btn-1\">Next </button>\r\n                <button onClick = {this.addTask} className = \"btn btn-2\">Add a random task</button>\r\n                </div>\r\n                <p className \r\n                = \"by\">by AntonCreator ⓒ</p>\r\n            </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Random","import React from \"react\";\nimport Task from \"./components/task\";\nimport Taskinput from \"./components/taskinput\"\nimport Random from \"./components/randomtodo\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n  \n  this.state = {\n    tasks : [\n      { id:0, title: \"Go home!\", done: false },\n      { id:1, title: \"Learn JS!\", done: true },\n      { id:2, title: \"Learn React hard!!!\", done: false }\n      \n    ]\n   }\n\n  this.addTask = this.addTask.bind(this)\n  }\n  \n  \n  \n  addTask = (task) => {\n\n    this.setState(state => {\n    let {tasks} = state\n    \n    tasks.push({id: tasks.length !== 0 ? tasks.length : 0,\n    title : task,\n    done : false\n    \n    }\n    ) \n       \n    console.log(tasks) \n      return tasks;\n    })\n    \n  }\n   \n  doneTask = id => { \n    const index = this.state.tasks.map(task => task.id).indexOf(id);\n    this.setState( state => {\n      let {tasks} = state;\n      tasks[index].done = true;\n      return tasks;\n  });\n}\n  \n  deleteTask = (id) => { \n    const index = this.state.tasks.map(task => task.id).indexOf(id);\n    this.setState( state => {\n      let {tasks} = state;\n      delete tasks[index]\n      return tasks;\n  });\n}\n\n\n\n  render() {\n    \n      const {tasks} = this.state;\n      const activeTasks = tasks.filter(task => !task.done)\n      const doneTasks = tasks.filter(task => task.done)\n\n      return(\n   \n      <div className = \"App\">\n      <h1 className=\"top\">Active tasks: {activeTasks.length}</h1>\n      {[...activeTasks,...doneTasks].map( task => (<Task\n       doneTask ={()=> this.doneTask(task.id)}\n       deleteTask ={()=> this.deleteTask(task.id)}\n      task={task}\n      key={task.id}/>))}\n      <Taskinput addTask = {this.addTask}></Taskinput>\n      <Random addTask = {this.addTask}/>\n      </div>\n       \n \n \n \n      )\n    }\n\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  \n  ,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}